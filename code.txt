Parse Completed
type:func	name:main	offset:0	entry:6
===========================================================
type:ddd	name:c	offset:0
type:struct	name:ddd	offset:0	width:8
===========================================================
type:int	name:b	offset:4	width:1	height:1
type:int	name:a	offset:0	width:1	height:1
===========================================================
===========================================================
type:func	name:foo	offset:0	entry:1
===========================================================
type:int	name:y	offset:4	width:1	height:1
type:int	name:x	offset:0	width:1	height:1
===========================================================
===========================================================
###foo:
main:
3	end	0	0	0
===========================================================
foo:
###2	lwi	0	0	x
3	lwi	1	0	y
4	add	0	1	2
5	ret	2	0	0
main:
###7	li	0	1	3
8	swi	3	0	c
9	li	0	20	4
10	swi	4	4	c
11	lwi	5	0	c
12	param	5	0	y
13	lwi	6	4	c
14	param	6	0	x
15	call	7	0	inst1
###16	write	0	0	7
17	li	0	0	8
18	ret	8	0	0
###19	end	0	0	0
===========================================================
.data
foo.x:	.word	0
foo.y:	.word	0
main.c:	.word	0
	.word	0
===========================================================
.data
foo.x:	.word	0
foo.y:	.word	0
main.c:	.word	0
	.word	0
===========================================================
now is 1
now is 2
now is 3
now is 4
now is 5
now is 6
now is 7
now is 8
now is 9
now is 10
now is 11
now is 12
now is 13
now is 14
now is 15
wrong while do call CG!
now is 16
now is 17
now is 18
now is 19
.text
foo:	sw	$ra		0($sp)	
	add	$sp	$sp	-4	
l2:	lw	$t0		foo.x+0	
	lw	$t1		foo.y+0	
	add	$t2	$t0	$t1	
	move	$v0	$t2		
	add	$sp	$sp	4	
	lw	$ra		0($sp)	
	jr	$ra			
main:	sw	$ra		0($sp)	
	add	$sp	$sp	-4	
l7:	li	$t3		1	
	sw	$t3		main.c+0	
	li	$t4		20	
	sw	$t4		main.c+4	
	lw	$t5		main.c+0	
	lw	$a0		main.c+0	
	sw	$a0		0($sp)	
	add	$sp	$sp	-4	
	lw	$a0		main.c+4	
	sw	$a0		0($sp)	
	add	$sp	$sp	-4	
	sw	$t5		foo.y	
	lw	$t6		main.c+4	
	sw	$t6		foo.x	
	jal			foo	
	move	$t7	$v0		
	add	$sp	$sp	4	
	lw	$a0		0($sp)	
	sw	$a0		main.c+4	
	add	$sp	$sp	4	
	lw	$a0		0($sp)	
	sw	$a0		main.c+0	
l16:	move	$a0	$t7		
	li	$v0	1		
	syscall				
	li	$t8		0	
	li	$v0	10		
	syscall				
